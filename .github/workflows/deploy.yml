name: Deploy

on:
  push:
    branches: [main,development]
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.environment || 'production' }}
  cancel-in-progress: false

permissions:
  contents: read
  deployments: write

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: ${{ inputs.environment || 'production' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Type check
        run: npm run typecheck
        
      - name: Build for production
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-build-${{ github.sha }}
          path: build/
          retention-days: 30
          compression-level: 9
          
      # Add your deployment steps here
      # Example for static site deployment:
      # - name: Deploy to hosting provider
      #   uses: your-deployment-action@v1
      #   with:
      #     deploy-path: ./build
      #     api-key: ${{ secrets.HOSTING_API_KEY }}
      
      - name: Create deployment status
        run: |
          echo "Deployment completed successfully!"
          echo "Environment: ${{ inputs.environment || 'production' }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Build artifacts available for download"

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      # Uncomment and configure for Docker registry
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
        
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            # your-registry/your-app-name
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            
      # Uncomment to build and push Docker image
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      
      - name: Docker build info
        run: |
          echo "Docker build configuration ready"
          echo "Configure your registry credentials and uncomment the build steps"